{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from 'react';\nimport { createEventMap, useEventMap } from '@workday/canvas-kit-react/common';\nimport { cursorEventMap, useCursorModel, getNext } from './cursor/useCursorModel';\nimport { useListModel } from './list/useListModel';\nexport var tabEventMap = createEventMap()({\n  guards: __assign(__assign({}, cursorEventMap.guards), {\n    shouldActivate: 'activate'\n  }),\n  callbacks: __assign(__assign({}, cursorEventMap.callbacks), {\n    onActivate: 'activate'\n  })\n});\nexport var useTabsModel = function (config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var initialTabRef = React.useRef(config.initialTab);\n\n  var _a = React.useState(initialTabRef.current || ''),\n      activeTab = _a[0],\n      setActiveTab = _a[1];\n\n  var cursor = useCursorModel(__assign({\n    orientation: config.orientation || 'horizontal'\n  }, config));\n  var panels = useListModel();\n\n  var state = __assign(__assign({}, cursor.state), {\n    activeTab: activeTab,\n    panels: panels.state.items,\n    panelIndexRef: panels.state.indexRef\n  });\n\n  var events = useEventMap(tabEventMap, state, config, __assign(__assign({}, cursor.events), {\n    activate: function (data) {\n      setActiveTab(data.tab);\n      events.goTo({\n        id: data.tab\n      });\n    },\n    registerItem: function (data) {\n      if (!initialTabRef.current) {\n        initialTabRef.current = data.item.id;\n        setActiveTab(initialTabRef.current);\n      }\n\n      cursor.events.registerItem(data);\n    },\n    unregisterItem: function (data) {\n      if (state.activeTab === data.id && state.items.some(function (i) {\n        return i.ref.current !== null;\n      })) {\n        var item = getNext(state.activeTab, state.items);\n        events.activate({\n          tab: item.id\n        });\n      }\n\n      cursor.events.unregisterItem(data);\n    },\n    registerPanel: panels.events.registerItem,\n    unregisterPanel: panels.events.unregisterItem\n  }));\n  return {\n    state: state,\n    events: events\n  };\n};","map":{"version":3,"sources":["/Users/janet.xuishi/node_modules/@workday/canvas-kit-react/dist/es6/tabs/lib/useTabsModel.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","createEventMap","useEventMap","cursorEventMap","useCursorModel","getNext","useListModel","tabEventMap","guards","shouldActivate","callbacks","onActivate","useTabsModel","config","initialTabRef","useRef","initialTab","_a","useState","current","activeTab","setActiveTab","cursor","orientation","panels","state","items","panelIndexRef","indexRef","events","activate","data","tab","goTo","id","registerItem","item","unregisterItem","some","ref","registerPanel","unregisterPanel"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { createEventMap, useEventMap } from '@workday/canvas-kit-react/common';\nimport { cursorEventMap, useCursorModel, getNext, } from './cursor/useCursorModel';\nimport { useListModel } from './list/useListModel';\nexport var tabEventMap = createEventMap()({\n    guards: __assign(__assign({}, cursorEventMap.guards), { shouldActivate: 'activate' }),\n    callbacks: __assign(__assign({}, cursorEventMap.callbacks), { onActivate: 'activate' }),\n});\nexport var useTabsModel = function (config) {\n    if (config === void 0) { config = {}; }\n    var initialTabRef = React.useRef(config.initialTab);\n    var _a = React.useState(initialTabRef.current || ''), activeTab = _a[0], setActiveTab = _a[1];\n    var cursor = useCursorModel(__assign({ orientation: config.orientation || 'horizontal' }, config));\n    var panels = useListModel();\n    var state = __assign(__assign({}, cursor.state), { activeTab: activeTab, panels: panels.state.items, panelIndexRef: panels.state.indexRef });\n    var events = useEventMap(tabEventMap, state, config, __assign(__assign({}, cursor.events), { activate: function (data) {\n            setActiveTab(data.tab);\n            events.goTo({ id: data.tab });\n        },\n        registerItem: function (data) {\n            if (!initialTabRef.current) {\n                initialTabRef.current = data.item.id;\n                setActiveTab(initialTabRef.current);\n            }\n            cursor.events.registerItem(data);\n        },\n        unregisterItem: function (data) {\n            if (state.activeTab === data.id && state.items.some(function (i) { return i.ref.current !== null; })) {\n                var item = getNext(state.activeTab, state.items);\n                events.activate({ tab: item.id });\n            }\n            cursor.events.unregisterItem(data);\n        }, registerPanel: panels.events.registerItem, unregisterPanel: panels.events.unregisterItem }));\n    return {\n        state: state,\n        events: events,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}