{"ast":null,"code":"import React from 'react';\nimport { PopupStack } from '@workday/canvas-kit-popup-stack';\nimport { useLocalRef } from '@workday/canvas-kit-react/common';\nexport var usePopupStack = function (ref, target) {\n  var _a = useLocalRef(ref),\n      elementRef = _a.elementRef,\n      localRef = _a.localRef;\n\n  var popupRef = React.useState(function () {\n    var container = PopupStack.createContainer();\n    elementRef(container);\n    return container;\n  })[0];\n  React.useLayoutEffect(function () {\n    if (popupRef !== localRef.current) {\n      throw Error(\"The 'ref' passed to usePopupStack should not be applied to a React element. This will cause a runtime error where the PopupStack and React compete for the element. Instead use ReactDOM.createPortal(<YourComponent />, ref.current)\");\n    }\n\n    var targetEl = target ? 'current' in target ? target.current || undefined : target : undefined;\n    PopupStack.add({\n      element: localRef.current,\n      owner: targetEl\n    });\n    var element = localRef.current;\n    return function () {\n      PopupStack.remove(element);\n    };\n  }, [localRef, target, popupRef]);\n  return localRef;\n};","map":{"version":3,"sources":["/Users/janet.xuishi/node_modules/@workday/canvas-kit-react/dist/es6/popup/lib/hooks/usePopupStack.js"],"names":["React","PopupStack","useLocalRef","usePopupStack","ref","target","_a","elementRef","localRef","popupRef","useState","container","createContainer","useLayoutEffect","current","Error","targetEl","undefined","add","element","owner","remove"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,OAAO,IAAIC,aAAa,GAAG,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AAC9C,MAAIC,EAAE,GAAGJ,WAAW,CAACE,GAAD,CAApB;AAAA,MAA2BG,UAAU,GAAGD,EAAE,CAACC,UAA3C;AAAA,MAAuDC,QAAQ,GAAGF,EAAE,CAACE,QAArE;;AACA,MAAIC,QAAQ,GAAGT,KAAK,CAACU,QAAN,CAAe,YAAY;AACtC,QAAIC,SAAS,GAAGV,UAAU,CAACW,eAAX,EAAhB;AACAL,IAAAA,UAAU,CAACI,SAAD,CAAV;AACA,WAAOA,SAAP;AACH,GAJc,EAIZ,CAJY,CAAf;AAKAX,EAAAA,KAAK,CAACa,eAAN,CAAsB,YAAY;AAC9B,QAAIJ,QAAQ,KAAKD,QAAQ,CAACM,OAA1B,EAAmC;AAC/B,YAAMC,KAAK,CAAC,uOAAD,CAAX;AACH;;AACD,QAAIC,QAAQ,GAAGX,MAAM,GACf,aAAaA,MAAb,GACIA,MAAM,CAACS,OAAP,IAAkBG,SADtB,GAEIZ,MAHW,GAIfY,SAJN;AAKAhB,IAAAA,UAAU,CAACiB,GAAX,CAAe;AAAEC,MAAAA,OAAO,EAAEX,QAAQ,CAACM,OAApB;AAA6BM,MAAAA,KAAK,EAAEJ;AAApC,KAAf;AACA,QAAIG,OAAO,GAAGX,QAAQ,CAACM,OAAvB;AACA,WAAO,YAAY;AACfb,MAAAA,UAAU,CAACoB,MAAX,CAAkBF,OAAlB;AACH,KAFD;AAGH,GAdD,EAcG,CAACX,QAAD,EAAWH,MAAX,EAAmBI,QAAnB,CAdH;AAeA,SAAOD,QAAP;AACH,CAvBM","sourcesContent":["import React from 'react';\nimport { PopupStack } from '@workday/canvas-kit-popup-stack';\nimport { useLocalRef } from '@workday/canvas-kit-react/common';\nexport var usePopupStack = function (ref, target) {\n    var _a = useLocalRef(ref), elementRef = _a.elementRef, localRef = _a.localRef;\n    var popupRef = React.useState(function () {\n        var container = PopupStack.createContainer();\n        elementRef(container);\n        return container;\n    })[0];\n    React.useLayoutEffect(function () {\n        if (popupRef !== localRef.current) {\n            throw Error(\"The 'ref' passed to usePopupStack should not be applied to a React element. This will cause a runtime error where the PopupStack and React compete for the element. Instead use ReactDOM.createPortal(<YourComponent />, ref.current)\");\n        }\n        var targetEl = target\n            ? 'current' in target\n                ? target.current || undefined\n                : target\n            : undefined;\n        PopupStack.add({ element: localRef.current, owner: targetEl });\n        var element = localRef.current;\n        return function () {\n            PopupStack.remove(element);\n        };\n    }, [localRef, target, popupRef]);\n    return localRef;\n};\n"]},"metadata":{},"sourceType":"module"}