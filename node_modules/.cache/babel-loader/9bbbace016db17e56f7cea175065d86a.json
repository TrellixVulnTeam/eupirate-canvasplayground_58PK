{"ast":null,"code":"import React from 'react';\nimport { getFirstFocusableElement, getLastFocusableElement } from '@workday/canvas-kit-react/common';\nexport var useFocusRedirect = function (model, elemProps) {\n  if (elemProps === void 0) {\n    elemProps = {};\n  }\n\n  var onKeyDown = React.useCallback(function (event) {\n    if (model.state.stackRef.current && event.key === 'Tab') {\n      var firstFocusableElement = getFirstFocusableElement(model.state.stackRef.current);\n      var lastFocusableElement = getLastFocusableElement(model.state.stackRef.current);\n\n      if (event.getModifierState('Shift') && document.activeElement === firstFocusableElement) {\n        event.preventDefault();\n        model.events.hide({\n          event: event\n        });\n      } else if (!event.getModifierState('Shift') && document.activeElement === lastFocusableElement) {\n        model.events.hide({\n          event: event\n        });\n      }\n    }\n  }, [model.events, model.state.stackRef]);\n  var visible = model.state.visibility !== 'hidden';\n  React.useLayoutEffect(function () {\n    if (!visible) {\n      return;\n    }\n\n    document.addEventListener('keydown', onKeyDown);\n    return function () {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [visible, onKeyDown]);\n  return elemProps;\n};","map":{"version":3,"sources":["/Users/janet.xuishi/node_modules/@workday/canvas-kit-react/dist/es6/popup/lib/hooks/useFocusRedirect.js"],"names":["React","getFirstFocusableElement","getLastFocusableElement","useFocusRedirect","model","elemProps","onKeyDown","useCallback","event","state","stackRef","current","key","firstFocusableElement","lastFocusableElement","getModifierState","document","activeElement","preventDefault","events","hide","visible","visibility","useLayoutEffect","addEventListener","removeEventListener"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,EAAmCC,uBAAnC,QAAkE,kCAAlE;AACA,OAAO,IAAIC,gBAAgB,GAAG,UAAUC,KAAV,EAAiBC,SAAjB,EAA4B;AACtD,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,IAAAA,SAAS,GAAG,EAAZ;AAAiB;;AAC7C,MAAIC,SAAS,GAAGN,KAAK,CAACO,WAAN,CAAkB,UAAUC,KAAV,EAAiB;AAC/C,QAAIJ,KAAK,CAACK,KAAN,CAAYC,QAAZ,CAAqBC,OAArB,IAAgCH,KAAK,CAACI,GAAN,KAAc,KAAlD,EAAyD;AACrD,UAAIC,qBAAqB,GAAGZ,wBAAwB,CAACG,KAAK,CAACK,KAAN,CAAYC,QAAZ,CAAqBC,OAAtB,CAApD;AACA,UAAIG,oBAAoB,GAAGZ,uBAAuB,CAACE,KAAK,CAACK,KAAN,CAAYC,QAAZ,CAAqBC,OAAtB,CAAlD;;AACA,UAAIH,KAAK,CAACO,gBAAN,CAAuB,OAAvB,KAAmCC,QAAQ,CAACC,aAAT,KAA2BJ,qBAAlE,EAAyF;AACrFL,QAAAA,KAAK,CAACU,cAAN;AACAd,QAAAA,KAAK,CAACe,MAAN,CAAaC,IAAb,CAAkB;AAAEZ,UAAAA,KAAK,EAAEA;AAAT,SAAlB;AACH,OAHD,MAIK,IAAI,CAACA,KAAK,CAACO,gBAAN,CAAuB,OAAvB,CAAD,IACLC,QAAQ,CAACC,aAAT,KAA2BH,oBAD1B,EACgD;AACjDV,QAAAA,KAAK,CAACe,MAAN,CAAaC,IAAb,CAAkB;AAAEZ,UAAAA,KAAK,EAAEA;AAAT,SAAlB;AACH;AACJ;AACJ,GAbe,EAab,CAACJ,KAAK,CAACe,MAAP,EAAef,KAAK,CAACK,KAAN,CAAYC,QAA3B,CAba,CAAhB;AAcA,MAAIW,OAAO,GAAGjB,KAAK,CAACK,KAAN,CAAYa,UAAZ,KAA2B,QAAzC;AACAtB,EAAAA,KAAK,CAACuB,eAAN,CAAsB,YAAY;AAC9B,QAAI,CAACF,OAAL,EAAc;AACV;AACH;;AACDL,IAAAA,QAAQ,CAACQ,gBAAT,CAA0B,SAA1B,EAAqClB,SAArC;AACA,WAAO,YAAY;AACfU,MAAAA,QAAQ,CAACS,mBAAT,CAA6B,SAA7B,EAAwCnB,SAAxC;AACH,KAFD;AAGH,GARD,EAQG,CAACe,OAAD,EAAUf,SAAV,CARH;AASA,SAAOD,SAAP;AACH,CA3BM","sourcesContent":["import React from 'react';\nimport { getFirstFocusableElement, getLastFocusableElement } from '@workday/canvas-kit-react/common';\nexport var useFocusRedirect = function (model, elemProps) {\n    if (elemProps === void 0) { elemProps = {}; }\n    var onKeyDown = React.useCallback(function (event) {\n        if (model.state.stackRef.current && event.key === 'Tab') {\n            var firstFocusableElement = getFirstFocusableElement(model.state.stackRef.current);\n            var lastFocusableElement = getLastFocusableElement(model.state.stackRef.current);\n            if (event.getModifierState('Shift') && document.activeElement === firstFocusableElement) {\n                event.preventDefault();\n                model.events.hide({ event: event });\n            }\n            else if (!event.getModifierState('Shift') &&\n                document.activeElement === lastFocusableElement) {\n                model.events.hide({ event: event });\n            }\n        }\n    }, [model.events, model.state.stackRef]);\n    var visible = model.state.visibility !== 'hidden';\n    React.useLayoutEffect(function () {\n        if (!visible) {\n            return;\n        }\n        document.addEventListener('keydown', onKeyDown);\n        return function () {\n            document.removeEventListener('keydown', onKeyDown);\n        };\n    }, [visible, onKeyDown]);\n    return elemProps;\n};\n"]},"metadata":{},"sourceType":"module"}