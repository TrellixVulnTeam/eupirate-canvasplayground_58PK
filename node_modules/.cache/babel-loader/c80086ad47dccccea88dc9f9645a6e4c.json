{"ast":null,"code":"import React from 'react';\nimport { tabTrappingKey } from './focus-trap-js';\nexport var useFocusTrap = function (model, elemProps) {\n  if (elemProps === void 0) {\n    elemProps = {};\n  }\n\n  var onKeyDown = React.useCallback(function (event) {\n    if (model.state.stackRef.current) {\n      tabTrappingKey(event, model.state.stackRef.current);\n    }\n  }, [model.state.stackRef]);\n  var visible = model.state.visibility !== 'hidden';\n  React.useLayoutEffect(function () {\n    if (!visible) {\n      return;\n    }\n\n    document.addEventListener('keydown', onKeyDown);\n    return function () {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [visible, onKeyDown]);\n  return elemProps;\n};","map":{"version":3,"sources":["/Users/janet.xuishi/node_modules/@workday/canvas-kit-react/dist/es6/popup/lib/hooks/useFocusTrap.js"],"names":["React","tabTrappingKey","useFocusTrap","model","elemProps","onKeyDown","useCallback","event","state","stackRef","current","visible","visibility","useLayoutEffect","document","addEventListener","removeEventListener"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAO,IAAIC,YAAY,GAAG,UAAUC,KAAV,EAAiBC,SAAjB,EAA4B;AAClD,MAAIA,SAAS,KAAK,KAAK,CAAvB,EAA0B;AAAEA,IAAAA,SAAS,GAAG,EAAZ;AAAiB;;AAC7C,MAAIC,SAAS,GAAGL,KAAK,CAACM,WAAN,CAAkB,UAAUC,KAAV,EAAiB;AAC/C,QAAIJ,KAAK,CAACK,KAAN,CAAYC,QAAZ,CAAqBC,OAAzB,EAAkC;AAC9BT,MAAAA,cAAc,CAACM,KAAD,EAAQJ,KAAK,CAACK,KAAN,CAAYC,QAAZ,CAAqBC,OAA7B,CAAd;AACH;AACJ,GAJe,EAIb,CAACP,KAAK,CAACK,KAAN,CAAYC,QAAb,CAJa,CAAhB;AAKA,MAAIE,OAAO,GAAGR,KAAK,CAACK,KAAN,CAAYI,UAAZ,KAA2B,QAAzC;AACAZ,EAAAA,KAAK,CAACa,eAAN,CAAsB,YAAY;AAC9B,QAAI,CAACF,OAAL,EAAc;AACV;AACH;;AACDG,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCV,SAArC;AACA,WAAO,YAAY;AACfS,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCX,SAAxC;AACH,KAFD;AAGH,GARD,EAQG,CAACM,OAAD,EAAUN,SAAV,CARH;AASA,SAAOD,SAAP;AACH,CAlBM","sourcesContent":["import React from 'react';\nimport { tabTrappingKey } from './focus-trap-js';\nexport var useFocusTrap = function (model, elemProps) {\n    if (elemProps === void 0) { elemProps = {}; }\n    var onKeyDown = React.useCallback(function (event) {\n        if (model.state.stackRef.current) {\n            tabTrappingKey(event, model.state.stackRef.current);\n        }\n    }, [model.state.stackRef]);\n    var visible = model.state.visibility !== 'hidden';\n    React.useLayoutEffect(function () {\n        if (!visible) {\n            return;\n        }\n        document.addEventListener('keydown', onKeyDown);\n        return function () {\n            document.removeEventListener('keydown', onKeyDown);\n        };\n    }, [visible, onKeyDown]);\n    return elemProps;\n};\n"]},"metadata":{},"sourceType":"module"}